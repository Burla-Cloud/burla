steps:
  - name: "gcr.io/cloud-builders/gcloud"
    script: |
      #!/usr/bin/env bash

      IMAGE_TAG=$( \
        gcloud artifacts tags list \
          --package=default/${_IMAGE_NAME} \
          --location=us \
          --repository=burla-job-containers \
          2>&1 | grep -Eo '^[0-9]+' | sort -n | tail -n 1 \
      );

      FULL_IMAGE_NAME_NO_TAG=us-docker.pkg.dev/${PROJECT_ID}/burla-job-containers/default/${_IMAGE_NAME};
      FULL_IMAGE_NAME_SEQUENTIAL_TAG=${FULL_IMAGE_NAME_NO_TAG}:$((${IMAGE_TAG} + 1));
      FULL_IMAGE_NAME_LATEST_TAG=${FULL_IMAGE_NAME_NO_TAG}:latest;

      echo $FULL_IMAGE_NAME_SEQUENTIAL_TAG > /workspace/FULL_IMAGE_NAME_SEQUENTIAL_TAG.txt;
      echo $FULL_IMAGE_NAME_LATEST_TAG > /workspace/FULL_IMAGE_NAME_LATEST_TAG.txt;

  - name: "gcr.io/cloud-builders/docker"
    script: |
      #!/usr/bin/env bash

      echo _IMAGE_NAME: ${_IMAGE_NAME}

      if [ "${_IMAGE_NAME}" == "base-image-nogpu" ]; then
        DOCKERFILE="Dockerfile.base";
        BASE_IMAGE="debian:12-slim";

      elif [ "${_IMAGE_NAME}" == "base-image-gpu" ]; then
        DOCKERFILE="Dockerfile.base";
        BASE_IMAGE="tensorflow/tensorflow:2.14.0rc1-gpu";

      elif [ "${_IMAGE_NAME}" == "image-nogpu" ]; then
        DOCKERFILE="Dockerfile";
        BASE_IMAGE=us-docker.pkg.dev/${PROJECT_ID}/burla-job-containers/default/base-image-nogpu:latest;
      elif [ "${_IMAGE_NAME}" == "image-gpu" ]; then
        DOCKERFILE="Dockerfile";
        BASE_IMAGE=us-docker.pkg.dev/${PROJECT_ID}/burla-job-containers/default/base-image-gpu:latest;
      fi

      FULL_IMAGE_NAME_SEQUENTIAL_TAG=$(cat FULL_IMAGE_NAME_SEQUENTIAL_TAG.txt);
      FULL_IMAGE_NAME_LATEST_TAG=$(cat FULL_IMAGE_NAME_LATEST_TAG.txt);

      docker build . \
        -t ${FULL_IMAGE_NAME_SEQUENTIAL_TAG} \
        -f ${DOCKERFILE} \
        --build-arg BASE_IMAGE=${BASE_IMAGE};

      docker push ${FULL_IMAGE_NAME_SEQUENTIAL_TAG};
      docker tag ${FULL_IMAGE_NAME_SEQUENTIAL_TAG} ${FULL_IMAGE_NAME_LATEST_TAG};
      docker push ${FULL_IMAGE_NAME_LATEST_TAG};

options:
  automapSubstitutions: true
  machineType: "E2_HIGHCPU_32"
